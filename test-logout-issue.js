import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

// Verifica√ß√£o de vari√°veis de ambiente
if (!process.env.SUPABASE_URL && !process.env.VITE_SUPABASE_URL) {
  console.error('‚ùå SUPABASE_URL n√£o encontrada nas vari√°veis de ambiente');
  console.log('üí° Certifique-se de que o arquivo .env.local existe e cont√©m VITE_SUPABASE_URL');
  process.exit(1);
}

if (!process.env.SUPABASE_ANON_KEY && !process.env.VITE_SUPABASE_ANON_KEY) {
  console.error('‚ùå SUPABASE_ANON_KEY n√£o encontrada nas vari√°veis de ambiente');
  console.log('üí° Certifique-se de que o arquivo .env.local existe e cont√©m VITE_SUPABASE_ANON_KEY');
  process.exit(1);
}


// Load environment variables
dotenv.config({ path: '.env.local' });

const SUPABASE_URL = process.env.VITE_SUPABASE_URL || process.env.SUPABASE_URL || process.env.VITE_SUPABASE_URL;
const SUPABASE_ANON_KEY = process.env.VITE_SUPABASE_ANON_KEY || process.env.SUPABASE_ANON_KEY || process.env.VITE_SUPABASE_ANON_KEY;

const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY, {
  auth: {
    storage: {
      getItem: (key) => null,
      setItem: (key, value) => {},
      removeItem: (key) => {}
    },
    persistSession: false,
    autoRefreshToken: false,
  }
});

async function testLogoutIssue() {
  console.log('üîç Diagn√≥stico do Problema de Logout\n');
  
  try {
    // 1. Test basic connection
    console.log('1. Testando conex√£o b√°sica com Supabase...');
    const { data, error } = await supabase.from('profiles').select('count').limit(1);
    
    if (error) {
      console.log('‚ùå Erro de conex√£o:', error.message);
      if (error.message.includes('JWT')) {
        console.log('üí° Poss√≠vel problema: Token JWT inv√°lido ou expirado');
      }
      if (error.message.includes('CORS')) {
        console.log('üí° Poss√≠vel problema: Configura√ß√£o CORS no Supabase');
      }
    } else {
      console.log('‚úÖ Conex√£o b√°sica funcionando');
    }
    
    // 2. Test auth endpoint directly
    console.log('\n2. Testando endpoint de autentica√ß√£o...');
    try {
      const response = await fetch(`${SUPABASE_URL}/auth/v1/user`, {
        method: 'GET',
        headers: {
          'apikey': SUPABASE_ANON_KEY,
          'Authorization': `Bearer ${SUPABASE_ANON_KEY}`,
          'Content-Type': 'application/json'
        }
      });
      
      console.log('Status da resposta:', response.status);
      if (response.ok) {
        console.log('‚úÖ Endpoint de auth acess√≠vel');
      } else {
        console.log('‚ùå Endpoint de auth com problema:', response.statusText);
      }
    } catch (fetchError) {
      console.log('‚ùå Erro ao acessar endpoint de auth:', fetchError.message);
    }
    
    // 3. Test logout endpoint specifically
    console.log('\n3. Testando endpoint de logout...');
    try {
      const response = await fetch(`${SUPABASE_URL}/auth/v1/logout?scope=local`, {
        method: 'POST',
        headers: {
          'apikey': SUPABASE_ANON_KEY,
          'Authorization': `Bearer ${SUPABASE_ANON_KEY}`,
          'Content-Type': 'application/json'
        }
      });
      
      console.log('Status da resposta logout:', response.status);
      if (response.ok) {
        console.log('‚úÖ Endpoint de logout acess√≠vel');
      } else {
        console.log('‚ùå Endpoint de logout com problema:', response.statusText);
      }
    } catch (fetchError) {
      console.log('‚ùå Erro ao acessar endpoint de logout:', fetchError.message);
    }
    
    // 4. Test signOut method
    console.log('\n4. Testando m√©todo signOut do Supabase...');
    try {
      const { error: signOutError } = await supabase.auth.signOut({ scope: 'local' });
      
      if (signOutError) {
        console.log('‚ùå Erro no signOut:', signOutError.message);
      } else {
        console.log('‚úÖ SignOut executado sem erro');
      }
    } catch (signOutError) {
      console.log('‚ùå Exce√ß√£o no signOut:', signOutError.message);
    }
    
  } catch (error) {
    console.error('‚ùå Erro geral no teste:', error.message);
  }
  
  console.log('\nüìã POSS√çVEIS CAUSAS DO ERRO ERR_ABORTED:');
  console.log('1. üåê Problema de conectividade de rede');
  console.log('2. üîí Configura√ß√£o CORS no projeto Supabase');
  console.log('3. ‚è∏Ô∏è  Projeto Supabase pausado ou indispon√≠vel');
  console.log('4. üîë Token de autentica√ß√£o inv√°lido ou expirado');
  console.log('5. üö´ Firewall ou proxy bloqueando a requisi√ß√£o');
  console.log('6. üì± Problema espec√≠fico do navegador/cache');
  
  console.log('\nüîß SOLU√á√ïES RECOMENDADAS:');
  console.log('1. Verificar se o projeto Supabase est√° ativo no dashboard');
  console.log('2. Limpar cache do navegador e cookies');
  console.log('3. Testar em modo inc√≥gnito/privado');
  console.log('4. Verificar configura√ß√µes de CORS no Supabase');
  console.log('5. Testar com diferentes navegadores');
  console.log('6. Verificar logs do Supabase no dashboard');
}

testLogoutIssue();